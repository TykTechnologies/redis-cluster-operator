FROM golang:1.23 AS builder
ARG TARGETOS
ARG TARGETARCH

# Set the working directory inside the container
WORKDIR /workspace

# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the entire project (includes your test directory structure).
COPY api/ api/
COPY internal/ internal/
COPY test/ test/


# Compile the end-to-end tests into a binary.
# This command compiles tests in the ./test/e2e/ directory into an executable named "e2e-tests".
RUN CGO_ENABLED=0 GOOS=${TARGETOS:-linux} GOARCH=${TARGETARCH} go test -c -o /workspace/e2e-tests ./test/e2e/drc_crud/

FROM alpine:3.17

WORKDIR /
# Install CA certificates if your tests need to make HTTPS calls.
RUN apk add --no-cache ca-certificates

# Copy the test binary from the builder stage.
COPY --from=builder /workspace/e2e-tests /e2e-tests

# Set the entrypoint to run the test binary with the desired flags.
ENTRYPOINT ["/e2e-tests", "-test.v", "-ginkgo.v"]
